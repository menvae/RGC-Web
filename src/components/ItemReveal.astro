---
export interface Props {
  title: string;
  expanded?: boolean;
  url?: string;
}

const { title, expanded = false, url } = Astro.props;
---

<div class="reveal-item" data-expanded={expanded} data-url={url}>
  <button class="reveal-header" aria-expanded={expanded}>
    <span class="arrow">â–º</span>
    <span class="title">{title}</span>
  </button>
  
  <div class="reveal-content">
    {!url && <slot />}
    {url && <div class="content-placeholder"></div>}
  </div>
</div>

<style is:inline>
  .reveal-item {
    border: 1px solid #e2e8f0;
    border-radius: 20px;
    overflow: hidden;
    margin: 1rem 0;
    background-color: rgba(0, 0, 0, 0.103);
    max-width: 50%;
  }
  
  .reveal-header {
    font-size: large;
    color: white;
    display: flex;
    align-items: center;
    width: 100%;
    padding: 1rem;
    border: none;
    background: none;
    cursor: pointer;
    text-align: left;
  }
  
  .arrow {
    margin-right: 0.75rem;
    transition: transform 0.1s ease-out;
    font-size: 0.8em;
  }
  
  .reveal-item[data-expanded="true"] .arrow {
    transform: rotate(90deg);
  }
  
  .title {
    font-weight: 600;
    transition: color 0.2s;
  }
  
  .reveal-header:hover .title {
    color: var(--navbar-color);
  }
  
  .reveal-content {
    padding: 0 1rem;
    max-height: 0;
    overflow: hidden;
    transition: 
      max-height 0.1s cubic-bezier(0, 0, 0.8, 1),
      padding 0.1s cubic-bezier(0, 0, 0.8, 1);
  }
  
  .reveal-item[data-expanded="true"] .reveal-content {
    max-height: var(--max-height);
    padding-bottom: 1rem;
  }
  
  .content-placeholder {
    min-height: 20px;
  }
</style>